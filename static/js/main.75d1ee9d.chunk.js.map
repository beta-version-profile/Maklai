{"version":3,"sources":["components/Photos/index.js","components/Search/index.js","components/MorePhotos/index.js","App.js","index.js"],"names":["Photos","_ref","data","getImageUrl","react_default","a","createElement","className","map","image","key","id","alt","src","Search","fetchData","setSearchText","debounceOnSearch","debounce","onChange","_ref2","value","target","placeholder","onClick","MorePhotos","FLICKR_API","concat","process","farm","server","secret","App","_useState","useState","_useState2","Object","slicedToArray","searchText","_useState3","_useState4","photos","setPhotos","_useState5","_useState6","currentPage","setPage","_useState7","_useState8","lastPage","setLastPage","_useState9","_useState10","loading","setLoading","asyncToGenerator","regenerator_default","mark","_callee","skip","_ref2$photos","photo","page","pages","_args","arguments","wrap","_context","prev","next","length","undefined","abrupt","fetch","sent","json","toConsumableArray","t0","console","error","stop","apply","this","isShowButton","react_loading_default","type","color","height","width","components_Search","components_Photos","components_MorePhotos","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.75d1ee9d.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Photos.css'\r\n\r\nconst Photos = ({ data, getImageUrl }) => {\r\n  return (\r\n    <div className=\"flickr-photos\">\r\n      {data &&\r\n        data.map(image => (\r\n          <img\r\n            className=\"flickr-image\"\r\n            key={image.id}\r\n            alt=\"flickr\"\r\n            src={getImageUrl(image)}\r\n          />\r\n        ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Photos\r\n","import React from 'react'\r\nimport debounce from 'lodash.debounce'\r\nimport './Search.css'\r\n\r\nconst delay = 500\r\n\r\nconst Search = ({ fetchData, setSearchText }) => {\r\n  const debounceOnSearch = debounce(setSearchText, delay)\r\n  const handlerOnSearch = ({ target: { value } }) => debounceOnSearch(value)\r\n\r\n  return (\r\n    <div className=\"flickr__search-wrapper\">\r\n      <input\r\n        className=\"flickr__input\"\r\n        onChange={handlerOnSearch}\r\n        placeholder=\"Photos...\"\r\n      />\r\n      <button onClick={fetchData} className=\"flickr__button\">\r\n        Search\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\n\r\nconst MorePhotos = ({ onClick }) => {\r\n  return (\r\n    <div className=\"App-header\">\r\n      <button onClick={onClick}>More photos...</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MorePhotos\r\n","import React, { useState } from 'react'\nimport Loading from 'react-loading'\n\nimport Photos from './components/Photos'\nimport Search from './components/Search'\nimport MorePhotos from './components/MorePhotos'\n\nimport './App.css'\n\nconst FLICKR_API = `${process.env.REACT_APP_API}/?api_key=${\n  process.env.REACT_APP_KEY\n}&format=rest&format=json&nojsoncallback=1`\n\nconst getImageUrl = image =>\n  `https://farm${image.farm}.staticflickr.com/${image.server}/${image.id}_${\n    image.secret\n  }.jpg`\n\nconst App = () => {\n  const [searchText, setSearchText] = useState(null)\n  const [photos, setPhotos] = useState(null)\n  const [currentPage, setPage] = useState(null)\n  const [lastPage, setLastPage] = useState(null)\n  const [loading, setLoading] = useState(false)\n\n  const fetchData = async (skip = 1) => {\n    if (!searchText) return\n    setLoading(true)\n    try {\n      const data = await fetch(\n        `${FLICKR_API}&method=flickr.photos.search&text=${searchText}&per_page=10&page=${skip}`\n      )\n      const {\n        photos: { photo, page, pages }\n      } = await data.json()\n\n      setPage(page)\n      setLastPage(pages)\n      if (page > 1) {\n        setPhotos([...photos, ...photo])\n      } else {\n        setPhotos(photo)\n      }\n      setLoading(false)\n    } catch (err) {\n      console.error(err)\n      setLoading(false)\n    }\n  }\n  const isShowButton = currentPage && currentPage < lastPage\n  if (loading)\n    return (\n      <Loading\n        type=\"spinningBubbles\"\n        color=\"#000\"\n        height={'20%'}\n        width={'20%'}\n        className=\"loading\"\n      />\n    )\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Search setSearchText={setSearchText} fetchData={fetchData} />\n      </header>\n      <Photos getImageUrl={getImageUrl} data={photos} />\n      {isShowButton && (\n        <MorePhotos onClick={() => fetchData(currentPage + 1)} />\n      )}\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}